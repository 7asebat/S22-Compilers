my_procedure: proc(x: int, y: int) -> bool
{
    switch x + y
    {
        case 1, 2, 3 {
            x += y;
        }

        case 5, 6 {
            x += y;
        }

        case 4 {
            x += y;
        }
    }
    return true && 4 > 0;
}
my_procedure(1, 2);

// Variable
id: int = 8;
id2: float = 00.7700;
id3: uint;
id4: [4]int;

// Constant
const const_id: uint = 8u;
const_id + 1u;

// Mathematical logical expressions
id = id + 1;
id += 3;
id = id & 3;
id %= 4;
id > 3;
id == 3;
id != 4;

if id > 4
{
	x: int = 4;
	x = 4 & 5;
}
else if id < 3
{
	y: int = 5;
}
else if id < 3
{
	y: int = 5;
	y = (5 + (-3 ^ 2)) * (3 + 4);
}
else
{
	// Literally anything
}

while id > 4
{
	id += 9;
}

my_procedure: proc(x: int, y: int) -> int
{
	my_procedure2: proc(x: int, y: int)
	{
		x: float;
		x += y[(my_procedure(x, y)) * (4 + 3)];

		{
			y: bool = my_procedure(x, y);
			return 4;
		}

		return;
	}
}
